$wnd.OERC_Dashboard_widgetset_OercWidgetset.runAsyncCallback7("function $createColElement(this$static){\n  $clinit_Document();\n  return ($clinit_DOMImpl() , impl_0).createElement_0(this$static, 'col');\n}\n\nfunction $getCellIndex(this$static){\n  $clinit_TableCellElement();\n  return this$static.cellIndex;\n}\n\nfunction $clinit_TableColElement(){\n  $clinit_TableColElement = emptyMethod;\n  $clinit_Element();\n}\n\ndefineClass(195, 413, {45:1, 42:1, 16:1, 29:1, 11:1, 8:1, 19:1, 1:1});\n_.createCell = function createCell(){\n  return createTD();\n}\n;\n_.getCellForEvent = function getCellForEvent(event_0){\n  var column, row, td;\n  td = this.getEventTargetCell(as_14(event_0.getNativeEvent()));\n  if (isNull(td)) {\n    return null;\n  }\n  row = $getSectionRowIndex(as_12($getParentElement(td)));\n  column = $getCellIndex(as_10(td));\n  return new HTMLTable$Cell(this, row, column);\n}\n;\n_.getColumnFormatter = function getColumnFormatter(){\n  return this.columnFormatter;\n}\n;\n_.getEventTargetCell = function getEventTargetCell(event_0){\n  var body_0, td, tr;\n  td = eventGetTarget_1(event_0);\n  for (; isNotNull(td); td = getParent(td)) {\n    if (equalsIgnoreCase_Ljava_lang_String__Z__devirtual$($getPropertyString(td, 'tagName'), 'td')) {\n      tr = getParent(td);\n      body_0 = getParent(tr);\n      if (jsEquals(body_0, this.bodyElem)) {\n        return asOld(td);\n      }\n    }\n    if (jsEquals(td, this.bodyElem)) {\n      return null;\n    }\n  }\n  return null;\n}\n;\n_.insertCell = function insertCell(row, column){\n  var td, tr;\n  tr = this.rowFormatter.getRow(this.bodyElem, row);\n  td = this.createCell();\n  insertChild(tr, td, column);\n}\n;\n_.removeCell = function removeCell(row, column){\n  var td, tr;\n  this.checkCellBounds(row, column);\n  td = this.cleanCell(row, column, false);\n  tr = this.rowFormatter.getRow(this.bodyElem, row);\n  $removeChild(tr, td);\n}\n;\ndefineClass(610, 195, {45:1, 42:1, 16:1, 29:1, 11:1, 8:1, 19:1, 1:1});\n_.insertCell = function insertCell_0(beforeRow, beforeColumn){\n  getClassPrototype(195).insertCell.call(this, beforeRow, beforeColumn);\n}\n;\n_.removeCell = function removeCell_0(row, col){\n  getClassPrototype(195).removeCell.call(this, row, col);\n}\n;\nfunction $clinit_Grid(){\n  $clinit_Grid = emptyMethod;\n  $clinit_HTMLTable();\n}\n\nfunction Grid(){\n  HTMLTable.call(this);\n  this.$init_404();\n  this.setCellFormatter(new HTMLTable$CellFormatter(this));\n  this.setRowFormatter(new HTMLTable$RowFormatter(this));\n  this.setColumnFormatter(new HTMLTable$ColumnFormatter(this));\n}\n\nfunction Grid_0(rows_0, columns){\n  $clinit_Grid();\n  Grid.call(this);\n  this.resize(rows_0, columns);\n}\n\nfunction addRows(table, rows_0, columns){\n  var td = $doc.createElement('td');\n  td.innerHTML = '&nbsp;';\n  var row = $doc.createElement('tr');\n  for (var cellNum = 0; cellNum < columns; cellNum++) {\n    var cell = td.cloneNode(true);\n    row.appendChild(cell);\n  }\n  table.appendChild(row);\n  for (var rowNum = 1; rowNum < rows_0; rowNum++) {\n    table.appendChild(row.cloneNode(true));\n  }\n}\n\ndefineClass(771, 195, {45:1, 42:1, 16:1, 29:1, 11:1, 8:1, 19:1, 1:1}, Grid_0);\n_.$init_404 = function $init_404(){\n}\n;\n_.createCell = function createCell_0(){\n  var td;\n  td = getClassPrototype(195).createCell.call(this);\n  $setInnerHTML(td, '&nbsp;');\n  return asOld(td);\n}\n;\n_.getCellCount = function getCellCount_0(row){\n  return this.numColumns;\n}\n;\n_.getRowCount = function getRowCount_0(){\n  return this.numRows;\n}\n;\n_.insertRow = function insertRow_1(beforeRow){\n  var i_0, index_0;\n  index_0 = getClassPrototype(195).insertRow.call(this, beforeRow);\n  this.numRows++;\n  for (i_0 = 0; i_0 < this.numColumns; i_0++) {\n    this.insertCell(index_0, i_0);\n  }\n  return index_0;\n}\n;\n_.prepareCell = function prepareCell_0(row, column){\n  this.prepareRow(row);\n  if (column < 0) {\n    throw toJs(new IndexOutOfBoundsException_0('Cannot access a column with a negative index: ' + column));\n  }\n  if (column >= this.numColumns) {\n    throw toJs(new IndexOutOfBoundsException_0('Column index: ' + column + ', Column size: ' + this.numColumns));\n  }\n}\n;\n_.prepareRow = function prepareRow_0(row){\n  if (row < 0) {\n    throw toJs(new IndexOutOfBoundsException_0('Cannot access a row with a negative index: ' + row));\n  }\n  if (row >= this.numRows) {\n    throw toJs(new IndexOutOfBoundsException_0('Row index: ' + row + ', Row size: ' + this.numRows));\n  }\n}\n;\n_.removeRow = function removeRow_1(row){\n  getClassPrototype(195).removeRow.call(this, row);\n  this.numRows--;\n}\n;\n_.resize = function resize(rows_0, columns){\n  this.resizeColumns(columns);\n  this.resizeRows(rows_0);\n}\n;\n_.resizeColumns = function resizeColumns(columns){\n  var i_0, j;\n  if (this.numColumns == columns) {\n    return;\n  }\n  if (columns < 0) {\n    throw toJs(new IndexOutOfBoundsException_0('Cannot set number of columns to ' + columns));\n  }\n  if (this.numColumns > columns) {\n    for (i_0 = 0; i_0 < this.numRows; i_0++) {\n      for (j = this.numColumns - 1; j >= columns; j--) {\n        this.removeCell(i_0, j);\n      }\n    }\n  }\n   else {\n    for (i_0 = 0; i_0 < this.numRows; i_0++) {\n      for (j = this.numColumns; j < columns; j++) {\n        this.insertCell(i_0, j);\n      }\n    }\n  }\n  this.numColumns = columns;\n  this.getColumnFormatter().resizeColumnGroup(columns, false);\n}\n;\n_.resizeRows = function resizeRows(rows_0){\n  if (this.numRows == rows_0) {\n    return;\n  }\n  if (rows_0 < 0) {\n    throw toJs(new IndexOutOfBoundsException_0('Cannot set number of rows to ' + rows_0));\n  }\n  if (this.numRows < rows_0) {\n    addRows(this.getBodyElement(), rows_0 - this.numRows, this.numColumns);\n    this.numRows = rows_0;\n  }\n   else {\n    while (this.numRows > rows_0) {\n      this.removeRow(this.numRows - 1);\n    }\n  }\n}\n;\nfunction $clinit_HTMLTable$Cell(){\n  $clinit_HTMLTable$Cell = emptyMethod;\n  $clinit_Object();\n}\n\nfunction HTMLTable$Cell(this$0, rowIndex, cellIndex){\n  $clinit_HTMLTable$Cell();\n  this.this$01 = this$0;\n  Object_0.call(this);\n  this.$init_409();\n  this.cellIndex_0 = cellIndex;\n  this.rowIndex_0 = rowIndex;\n}\n\ndefineClass(1973, 1, {1:1}, HTMLTable$Cell);\n_.$init_409 = function $init_409(){\n}\n;\n_.getCellIndex = function getCellIndex(){\n  return this.cellIndex_0;\n}\n;\n_.getRowIndex = function getRowIndex(){\n  return this.rowIndex_0;\n}\n;\ndefineClass(749, 1, {1:1});\n_.resizeColumnGroup = function resizeColumnGroup(columns, growOnly){\n  var i_0, num;\n  columns = max_3(columns, 1);\n  num = $getChildCount(this.columnGroup);\n  if (num < columns) {\n    for (i_0 = num; i_0 < columns; i_0++) {\n      $appendChild(this.columnGroup, $createColElement(get_2()));\n    }\n  }\n   else if (!growOnly && num > columns) {\n    for (i_0 = num; i_0 > columns; i_0--) {\n      $removeChild(this.columnGroup, $getLastChild(this.columnGroup));\n    }\n  }\n}\n;\ndefineClass(1610, 1, {62:1, 2893:1, 3:1, 1:1});\n_.refresh_1 = function refresh_1(){\n  this.val$handler2.invoke(this, getType_38(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridServerRpc_2_classLit).getMethod('refresh'), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), {3:1, 1:1, 5:1}, 1, 5, []));\n}\n;\n_.select_6 = function select_12(p0, p1){\n  this.val$handler2.invoke(this, getType_38(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridServerRpc_2_classLit).getMethod('select'), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), {3:1, 1:1, 5:1}, 1, 5, [valueOf_68(p0), valueOf_68(p1)]));\n}\n;\ndefineClass(1732, 1, {203:1, 1:1});\n_.load_9 = function load_13(){\n  this.val$store2.setSuperClass(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit, Lcom_vaadin_shared_AbstractFieldState_2_classLit);\n  this.val$store2.setClass('com.vaadin.ui.components.colorpicker.ColorPickerGrid', Lcom_vaadin_client_ui_colorpicker_ColorPickerGridConnector_2_classLit);\n  this.val$store2.setConstructor(Lcom_vaadin_client_ui_colorpicker_ColorPickerGridConnector_2_classLit, new ConnectorBundleLoaderImpl$7$1$1(this));\n  this.val$store2.setConstructor(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit, new ConnectorBundleLoaderImpl$7$1$2(this));\n  this.val$store2.setReturnType(Lcom_vaadin_client_ui_colorpicker_ColorPickerGridConnector_2_classLit, 'getState', new Type(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit));\n  this.loadJsBundle_5(this.val$store2);\n  this.val$store2.setPropertyType(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit, 'changedColor', new Type(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1)));\n  this.val$store2.setPropertyType(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit, 'changedX', new Type(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1)));\n  this.val$store2.setPropertyType(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit, 'changedY', new Type(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1)));\n  this.val$store2.setPropertyType(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit, 'columnCount', new Type(Ljava_lang_Integer_2_classLit));\n  this.val$store2.setPropertyType(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit, 'rowCount', new Type(Ljava_lang_Integer_2_classLit));\n  this.val$store2.addOnStateChangeMethod(Lcom_vaadin_client_ui_colorpicker_ColorPickerGridConnector_2_classLit, new OnStateChangeMethod(Lcom_vaadin_client_ui_AbstractComponentConnector_2_classLit, 'handleContextClickListenerChange', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {3:1, 1:1, 5:1, 15:1}, 2, 6, ['registeredEventListeners'])));\n}\n;\n_.loadJsBundle_5 = function loadJsBundle_5(store){\n  this.loadNativeJs_5(store);\n}\n;\n_.loadNativeJs_5 = function loadNativeJs_5(store){\n  var data_0 = {setter:function(bean, value_0){\n    bean.changedColor = value_0;\n  }\n  , getter:function(bean){\n    return bean.changedColor;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit, 'changedColor', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.changedX = value_0;\n  }\n  , getter:function(bean){\n    return bean.changedX;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit, 'changedX', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.changedY = value_0;\n  }\n  , getter:function(bean){\n    return bean.changedY;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit, 'changedY', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.columnCount = value_0.intValue();\n  }\n  , getter:function(bean){\n    return valueOf_68(bean.columnCount);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit, 'columnCount', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.rowCount = value_0.intValue();\n  }\n  , getter:function(bean){\n    return valueOf_68(bean.rowCount);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit, 'rowCount', data_0);\n}\n;\n_.onSuccess_1 = function onSuccess_11(){\n  this.load_9();\n  get_26().setLoaded_0(this.this$11.getName());\n}\n;\nfunction $clinit_ConnectorBundleLoaderImpl$7$1$1(){\n  $clinit_ConnectorBundleLoaderImpl$7$1$1 = emptyMethod;\n  $clinit_Object();\n}\n\nfunction ConnectorBundleLoaderImpl$7$1$1(this$2){\n  $clinit_ConnectorBundleLoaderImpl$7$1$1();\n  this.this$21 = this$2;\n  Object_0.call(this);\n  this.$init_1218();\n}\n\ndefineClass(1733, 1, {6:1, 1:1}, ConnectorBundleLoaderImpl$7$1$1);\n_.$init_1218 = function $init_1218(){\n}\n;\n_.invoke_0 = function invoke_300(target, params){\n  return new ColorPickerGridConnector;\n}\n;\nvar Lcom_vaadin_client_metadata_ConnectorBundleLoaderImpl$7$1$1_2_classLit = createForClass('com.vaadin.client.metadata', 'ConnectorBundleLoaderImpl/7/1/1', 1733, Ljava_lang_Object_2_classLit);\nfunction $clinit_ConnectorBundleLoaderImpl$7$1$2(){\n  $clinit_ConnectorBundleLoaderImpl$7$1$2 = emptyMethod;\n  $clinit_Object();\n}\n\nfunction ConnectorBundleLoaderImpl$7$1$2(this$2){\n  $clinit_ConnectorBundleLoaderImpl$7$1$2();\n  this.this$21 = this$2;\n  Object_0.call(this);\n  this.$init_1219();\n}\n\ndefineClass(1734, 1, {6:1, 1:1}, ConnectorBundleLoaderImpl$7$1$2);\n_.$init_1219 = function $init_1219(){\n}\n;\n_.invoke_0 = function invoke_301(target, params){\n  return new ColorPickerGridState;\n}\n;\nvar Lcom_vaadin_client_metadata_ConnectorBundleLoaderImpl$7$1$2_2_classLit = createForClass('com.vaadin.client.metadata', 'ConnectorBundleLoaderImpl/7/1/2', 1734, Ljava_lang_Object_2_classLit);\nfunction $clinit_ColorPickerGridConnector(){\n  $clinit_ColorPickerGridConnector = emptyMethod;\n  $clinit_AbstractComponentConnector();\n}\n\nfunction ColorPickerGridConnector(){\n  $clinit_ColorPickerGridConnector();\n  AbstractComponentConnector.call(this);\n  this.$init_1450();\n}\n\ndefineClass(2172, 13, {38:1, 7:1, 14:1, 22:1, 26:1, 13:1, 17:1, 33:1, 24:1, 3:1, 1:1}, ColorPickerGridConnector);\n_.$init_1450 = function $init_1450(){\n  this.rpc = castTo(create_12(Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridServerRpc_2_classLit, this), 2893);\n}\n;\n_.getState = function getState_124(){\n  return this.getState_42();\n}\n;\n_.getState_0 = function getState_125(){\n  return this.getState_42();\n}\n;\n_.getWidget_0 = function getWidget_40(){\n  return this.getWidget_19();\n}\n;\n_.createWidget = function createWidget_11(){\n  return castTo(new VColorPickerGrid, 8);\n}\n;\n_.getState_42 = function getState_126(){\n  return castTo(getClassPrototype(13).getState.call(this), 653);\n}\n;\n_.getWidget_19 = function getWidget_41(){\n  return castTo(getClassPrototype(13).getWidget_0.call(this), 666);\n}\n;\n_.init_3 = function init_31(){\n  getClassPrototype(17).init_3.call(this);\n  this.getWidget_19().addClickHandler(this);\n}\n;\n_.onClick = function onClick_55(event_0){\n  this.rpc.select_6(this.getWidget_19().getSelectedX(), this.getWidget_19().getSelectedY());\n}\n;\n_.onStateChanged = function onStateChanged_15(stateChangeEvent){\n  getClassPrototype(13).onStateChanged.call(this, stateChangeEvent);\n  if (stateChangeEvent.hasPropertyChanged('rowCount') || stateChangeEvent.hasPropertyChanged('columnCount') || stateChangeEvent.hasPropertyChanged('updateGrid')) {\n    this.getWidget_19().updateGrid(this.getState_42().rowCount, this.getState_42().columnCount);\n  }\n  if (stateChangeEvent.hasPropertyChanged('changedX') || stateChangeEvent.hasPropertyChanged('changedY') || stateChangeEvent.hasPropertyChanged('changedColor') || stateChangeEvent.hasPropertyChanged('updateColor')) {\n    this.getWidget_19().updateColor(this.getState_42().changedColor, this.getState_42().changedX, this.getState_42().changedY);\n    if (!this.getWidget_19().isGridLoaded()) {\n      this.rpc.refresh_1();\n    }\n  }\n}\n;\nvar Lcom_vaadin_client_ui_colorpicker_ColorPickerGridConnector_2_classLit = createForClass('com.vaadin.client.ui.colorpicker', 'ColorPickerGridConnector', 2172, Lcom_vaadin_client_ui_AbstractComponentConnector_2_classLit);\nfunction $clinit_VColorPickerGrid(){\n  $clinit_VColorPickerGrid = emptyMethod;\n  $clinit_AbsolutePanel();\n}\n\nfunction VColorPickerGrid(){\n  $clinit_VColorPickerGrid();\n  AbsolutePanel.call(this);\n  this.$init_1452();\n  this.add_4(this.createGrid(), 0, 0);\n}\n\ndefineClass(666, 355, {38:1, 45:1, 7:1, 16:1, 29:1, 11:1, 8:1, 666:1, 19:1, 1:1}, VColorPickerGrid);\n_.$init_1452 = function $init_1452(){\n  this.rows_0 = 1;\n  this.columns = 1;\n  this.gridLoaded = false;\n}\n;\n_.addClickHandler = function addClickHandler_9(handler){\n  return this.addDomHandler(handler, getType_10());\n}\n;\n_.createGrid = function createGrid(){\n  this.grid = new Grid_0(this.rows_0, this.columns);\n  this.grid.setWidth_0('100%');\n  this.grid.setHeight_0('100%');\n  this.grid.addClickHandler(this);\n  return this.grid;\n}\n;\n_.getSelectedX = function getSelectedX(){\n  return this.selectedX;\n}\n;\n_.getSelectedY = function getSelectedY(){\n  return this.selectedY;\n}\n;\n_.isGridLoaded = function isGridLoaded(){\n  return this.gridLoaded;\n}\n;\n_.onClick = function onClick_56(event_0){\n  var cell;\n  cell = this.grid.getCellForEvent(event_0);\n  if (isNull(cell)) {\n    return;\n  }\n  this.selectedY = cell.getRowIndex();\n  this.selectedX = cell.getCellIndex();\n}\n;\n_.updateColor = function updateColor(changedColor, changedX, changedY){\n  var c, element;\n  if (jsNotEquals(changedColor, null) && jsNotEquals(changedX, null) && jsNotEquals(changedY, null)) {\n    if (changedColor.length == changedX.length && changedX.length == changedY.length) {\n      for (c = 0; c < changedColor.length; c++) {\n        element = this.grid.getCellFormatter().getElement_0(parseInt_2(changedX[c]), parseInt_2(changedY[c]));\n        $setProperty_0($getStyle(element), 'background', changedColor[c]);\n      }\n    }\n    this.gridLoaded = true;\n  }\n}\n;\n_.updateGrid = function updateGrid(rowCount, columnCount){\n  this.rows_0 = rowCount;\n  this.columns = columnCount;\n  this.remove_3(this.grid);\n  this.add_4(this.createGrid(), 0, 0);\n}\n;\n_.columns = 0;\n_.gridLoaded = false;\n_.rows_0 = 0;\n_.selectedX = 0;\n_.selectedY = 0;\nvar Lcom_vaadin_client_ui_colorpicker_VColorPickerGrid_2_classLit = createForClass('com.vaadin.client.ui.colorpicker', 'VColorPickerGrid', 666, Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit);\nfunction $clinit_ColorPickerGridState(){\n  $clinit_ColorPickerGridState = emptyMethod;\n  $clinit_AbstractFieldState();\n}\n\nfunction ColorPickerGridState(){\n  $clinit_ColorPickerGridState();\n  AbstractFieldState.call(this);\n  this.$init_1840();\n}\n\ndefineClass(653, 59, {32:1, 59:1, 28:1, 65:1, 653:1, 3:1, 1:1}, ColorPickerGridState);\n_.$init_1840 = function $init_1840(){\n}\n;\n_.columnCount = 0;\n_.rowCount = 0;\nvar Lcom_vaadin_shared_ui_colorpicker_ColorPickerGridState_2_classLit = createForClass('com.vaadin.shared.ui.colorpicker', 'ColorPickerGridState', 653, Lcom_vaadin_shared_AbstractFieldState_2_classLit);\n$entry(onLoad)(7);\n\n//# sourceURL=OERC.Dashboard.widgetset.OercWidgetset-7.js\n")
